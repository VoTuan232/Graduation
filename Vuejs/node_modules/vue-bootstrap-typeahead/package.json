{
  "_from": "vue-bootstrap-typeahead",
  "_id": "vue-bootstrap-typeahead@0.2.6",
  "_inBundle": false,
  "_integrity": "sha512-BcUAnvfN+PS0StL6E3endd37P7HUt9otk+8m7tsa2gkt2I2KY8O2Dma49oR8ie8iletvJAlAqpN+klF6ktPULQ==",
  "_location": "/vue-bootstrap-typeahead",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-bootstrap-typeahead",
    "fetchSpec": "latest",
    "name": "vue-bootstrap-typeahead",
    "raw": "vue-bootstrap-typeahead",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-bootstrap-typeahead/-/vue-bootstrap-typeahead-0.2.6.tgz",
  "_shasum": "8c1999a00bf4bf9fc906bae3a462482482cbc297",
  "_shrinkwrap": null,
  "_spec": "vue-bootstrap-typeahead",
  "_where": "/opt/lampp/htdocs/Graduation/Vuejs",
  "author": {
    "email": "alexurquhart@gmail.com",
    "name": "Alex Urquhart",
    "url": "https://alexurquhart.com"
  },
  "bugs": {
    "url": "https://github.com/alexurquhart/vue-bootstrap-typeahead/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "resize-observer-polyfill": "^1.5.0",
    "vue": "^2.5.17"
  },
  "deprecated": false,
  "description": "A typeahead/autocomplete component for Vue 2 using Bootstrap 4",
  "devDependencies": {
    "@vue/cli-plugin-babel": "^3.0.0",
    "@vue/cli-plugin-eslint": "^3.0.0",
    "@vue/cli-plugin-unit-jest": "^3.0.0",
    "@vue/cli-service": "^3.0.0",
    "@vue/eslint-config-standard": "^3.0.1",
    "@vue/test-utils": "^1.0.0-beta.20",
    "babel-core": "7.0.0-bridge.0",
    "babel-jest": "^23.0.1",
    "bootstrap": "^4.1.3",
    "bootstrap-vue": "^2.0.0-rc.11",
    "coveralls": "^3.0.2",
    "highlight.js": "^9.12.0",
    "node-sass": "^4.9.0",
    "sass-loader": "^7.0.1",
    "underscore": "^1.9.1",
    "vue-gtm": "^2.0.0",
    "vue-hljs": "^1.0.0",
    "vue-router": "^3.0.1",
    "vue-template-compiler": "^2.5.17",
    "whatwg-fetch": "^2.0.4"
  },
  "homepage": "https://alexurquhart.github.io/vue-bootstrap-typeahead/",
  "keywords": [
    "autocomplete",
    "bootstrap",
    "bootstrap 4",
    "typeahead",
    "vue"
  ],
  "license": "MIT",
  "main": "src/components/VueBootstrapTypeahead.vue",
  "name": "vue-bootstrap-typeahead",
  "optionalDependencies": {},
  "private": false,
  "readme": "# vue-bootstrap-typeahead\n\n[![NPM](https://nodei.co/npm/vue-bootstrap-typeahead.png)](https://www.npmjs.com/package/vue-bootstrap-typeahead)\n\n[![Build Status](https://travis-ci.org/alexurquhart/vue-bootstrap-typeahead.svg?branch=master)](https://travis-ci.org/alexurquhart/vue-bootstrap-typeahead)\n[![Coverage Status](https://coveralls.io/repos/github/alexurquhart/vue-bootstrap-typeahead/badge.svg?branch=master)](https://coveralls.io/github/alexurquhart/vue-bootstrap-typeahead?branch=master)\n[![npm](https://img.shields.io/npm/dm/vue-bootstrap-typeahead.svg)](https://www.npmjs.com/package/vue-bootstrap-typeahead)\n[![GitHub license](https://img.shields.io/github/license/alexurquhart/vue-bootstrap-typeahead.svg)](https://github.com/alexurquhart/vue-bootstrap-typeahead/blob/master/LICENSE.txt)\n\nA simple `list-group` based typeahead/autocomplete using Bootstrap 4 and Vue 2\n\n<img src=\"https://raw.githubusercontent.com/alexurquhart/vue-bootstrap-typeahead/master/assets/screenshot.png\" alt=\"Preview image of the vue-bootstrap-typeahead component\">\n\n## [View The Examples](https://alexurquhart.github.io/vue-bootstrap-typeahead/#/examples)\n\n## Installation\n\nFrom NPM:\n\n```\n> npm i vue-bootstrap-typeahead --save\n```\n\nMinified UMD and CommonJS builds are available in the 'dist' folder. The component is also available for use in the browser directly on unpkg:\n\n```html\n<link href=\"https://unpkg.com/vue-bootstrap-typeahead/dist/VueBootstrapTypeahead.css\" rel=\"stylesheet\">\n<script src=\"https://unpkg.com/vue-bootstrap-typeahead\"></script>\n```\n\n## Usage\n\nImport and register the component\n```javascript\nimport VueBootstrapTypeahead from 'vue-bootstrap-typeahead'\n\n// Global registration\nVue.component('vue-bootstrap-typeahead', VueBootstrapTypeahead)\n\n// OR\n\n// Local registration\nexport default {\n    components: {\n        VueBootstrapTypeahead\n    }\n}\n```\n\n### Basic Usage\nThe only required attribute is a `data` array.\n\n```html\n<vue-bootstrap-typeahead \n  v-model=\"query\"\n  :data=\"['Canada', 'USA', 'Mexico']\"\n/>\n```\n\n### Working with API's\n\nThe typeahead does not fetch any data, for maximum flexibility it will only work with already loaded API responses in the form of arrays. The `serializer` attribute allows you to define a function to turn each array item in the response into a text string, which will appear in the results.\n\n```html\n<template>\n  <vue-bootstrap-typeahead\n    :data=\"addresses\"\n    v-model=\"addressSearch\"\n    size=\"lg\"\n    :serializer=\"s => s.text\"\n    placeholder=\"Type an address...\"\n    @hit=\"selectedAddress = $event\"\n  >\n</template>\n\n<script>\nimport _ from 'underscore'\n\nconst API_URL = 'https://api-url-here.com?query=:query'\n\nexport default {\n  name: 'TestComponent',\n\n  data() {\n    return {\n      addresses: [],\n      addressSearch: '',\n      selectedAddress: null\n    }\n  },\n\n  methods: {\n    async getAddresses(query) {\n      const res = await fetch(API_URL.replace(':query', query))\n      const suggestions = await res.json()\n      this.addresses = suggestions.suggestions\n    }\n  },\n\n  watch: {\n    addressSearch: _.debounce(function(addr) { this.getAddresses(addr) }, 500)\n  }\n}\n</script>\n\n```\n\n### Attributes\n\nName | Type | Default | Description\n--- | --- | --- | ---\ndata | `Array` | | Array of data to be available for querying. **Required**\nserializer | `Function` | `input => input` | Function used to convert the entries in the `data` array into a text string.\nsize | `String` | | Size of the `input-group`. Valid values: `sm` or `lg`\nbackgroundVariant | `String` | | Background color for the autocomplete result `list-group` items. [See valid values](http://getbootstrap.com/docs/4.1/utilities/colors/#background-color)\ntextVariant | `String` | | Text color for the autocomplete result `list-group` items. [See valid values](http://getbootstrap.com/docs/4.1/utilities/colors/#color)\ninputClass | `String` | | Class to the added to the `input` tag for validation, etc.\nmaxMatches | `Number` | 10 | Maximum amount of list items to appear.\nminMatchingChars | `Number` | 2 | Minimum matching characters in query before the typeahead list appears\nprepend | `String` | | Text to be prepended to the `input-group`\nappend | `String` | | Text to be appended to the `input-group`\n\n### Events\nName | Description\n--- | ---\n`hit` | Triggered when an autocomplete item is selected. The entry in the input `data` array that was selected is returned.\n`input` | The component can be used with `v-model`\n\n### Slots\n\nThere are `prepend` and `append` slots available for adding buttons or other markup. Overrides the `prepend` and `append` attributes.\n\n### Scoped Slots\n\nYou can use a [scoped slot](https://vuejs.org/v2/guide/components-slots.html#Scoped-Slots) called `suggestion` to define custom content\nfor the suggestion `list-item`'s\n\n```html\n<vue-bootstrap-typeahead\n  :data=\"countries\"\n  v-model=\"cntrySearch\"\n  :serializer=\"s => s.name\"\n  placeholder=\"Canada, United States, etc...\"\n  @hit=\"selectedCountry = $event\"\n>\n  <!-- htmlText is bound to the matched text derived from the serializer function -->\n  <!-- data is bound to the matching array element in the data prop -->\n  <template slot=\"suggestion\" slot-scope=\"{ data, htmlText }\">\n    <span v-html=\"htmlText\"></span>&nbsp;<small>{{ data.code }}</small>\n  </template>\n</vue-bootstrap-typeahead>\n```\n\n## Local Examples/Demo\n\nClone this repository and run `npm run serve` and navigate to http://localhost:8080 to launch the documentation. The source is in `src/views/Home.vue`\n\nYou can also view and edit examples hosted on CodePen [here](https://alexurquhart.github.io/vue-bootstrap-typeahead/#/examples)\n\n## Contributing\n\nPlease note that active development is done on the `Development` branch. PR's are welcome!\n\n## Contributing\n\nPlease note that active development is done on the `Development` branch. PR's are welcome!\n\n## Sites using this component\n\n- [plottr.io](https://plottr.io) - Plan and map your running/cycling routes. This component is an offshoot from this project.\n\nSend a pull request to add your site to this list!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexurquhart/vue-bootstrap-typeahead.git"
  },
  "scripts": {
    "build": "vue-cli-service build --target lib --name VueBootstrapTypeahead src/components/VueBootstrapTypeahead.vue",
    "build:docs": "vue-cli-service build --dest docs",
    "lint": "vue-cli-service lint",
    "serve": "vue-cli-service serve",
    "test:unit": "vue-cli-service test:unit --coverage"
  },
  "unpkg": "dist/VueBootstrapTypeahead.umd.min.js",
  "version": "0.2.6"
}
