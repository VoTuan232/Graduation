{
  "_from": "vue-socket.io-extended",
  "_id": "vue-socket.io-extended@3.2.1",
  "_inBundle": false,
  "_integrity": "sha512-6lMLkG0N83zgfLWHRkabiJgwkJrk4Fit7+JyYuzfsR4at03kGDOmidIK6IWX+qml9iddrPThmYzQAOP8xGgq7g==",
  "_location": "/vue-socket.io-extended",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-socket.io-extended",
    "fetchSpec": "latest",
    "name": "vue-socket.io-extended",
    "raw": "vue-socket.io-extended",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue-socket.io-extended/-/vue-socket.io-extended-3.2.1.tgz",
  "_shasum": "a7a74c83fd7e6c0ab41b8a90b09c07c9524b62fc",
  "_shrinkwrap": null,
  "_spec": "vue-socket.io-extended",
  "_where": "/opt/lampp/htdocs/Graduation/Vuejs",
  "author": {
    "email": "m_lyashuk@ukr.net",
    "name": "Max Lyashuk"
  },
  "bugs": {
    "url": "https://github.com/probil/vue-socket.io-extended/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/socket.io-client": "1.4.32",
    "camelcase": "5.0.0"
  },
  "deprecated": false,
  "description": "Socket.io bindings for Vuejs and Vuex (based on Vue-Socket.io)",
  "devDependencies": {
    "@babel/core": "7.2.2",
    "@babel/plugin-external-helpers": "7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "7.2.0",
    "@babel/preset-env": "7.3.1",
    "@vue/test-utils": "1.0.0-beta.28",
    "babel-core": "7.0.0-bridge.0",
    "conventional-changelog": "3.0.5",
    "eslint": "5.12.1",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-plugin-import": "2.15.0",
    "eslint-plugin-jest": "22.1.3",
    "jest": "23.6.0",
    "rollup": "1.1.2",
    "rollup-plugin-babel": "4.3.2",
    "rollup-plugin-commonjs": "9.2.0",
    "rollup-plugin-filesize": "6.0.0",
    "rollup-plugin-node-resolve": "4.0.0",
    "rollup-plugin-terser": "4.0.2",
    "vue": "2.5.22",
    "vue-template-compiler": "2.5.22",
    "vuex": "3.1.0"
  },
  "files": [
    "dist/",
    "types/index.d.ts",
    "types/vue.d.ts"
  ],
  "homepage": "https://github.com/probil/vue-socket.io-extended#readme",
  "jest": {
    "roots": [
      "<rootDir>/src"
    ]
  },
  "keywords": [
    "flux",
    "realtime",
    "redux",
    "socket",
    "socket.io",
    "socket.io-client",
    "vue",
    "vue-socket.io",
    "vuejs",
    "vuex",
    "websocket"
  ],
  "license": "MIT",
  "main": "dist/vue-socket.io-ext.min.js",
  "module": "dist/vue-socket.io-ext.esm.js",
  "name": "vue-socket.io-extended",
  "optionalDependencies": {},
  "readme": "<h1 align=\"center\" style=\"text-align:center\">Vue-Socket.io-Extended</h1>\n\n<p align=\"center\">\n  <a href=\"https://circleci.com/gh/probil/vue-socket.io-extended/tree/master\"><img src=\"https://badgen.net/circleci/github/probil/vue-socket.io-extended/master\" alt=\"Build Status\"></a>\n  <a href=\"https://www.npmjs.com/package/vue-socket.io-extended\"><img src=\"https://badgen.net/npm/v/vue-socket.io-extended\" alt=\"Version\"></a>\n  <a href=\"https://www.npmjs.com/package/vue-socket.io-extended\"><img src=\"https://badgen.net/npm/dt/vue-socket.io-extended\" alt=\"Downloads\"></a>\n  <a href=\"https://www.npmjs.com/package/vue-socket.io-extended\"><img src=\"https://badgen.net/npm/license/vue-socket.io-extended\" alt=\"License\"></a>\n  <a href=\"https://vuejs.org/\"><img src=\"https://badgen.net/badge/Vue/2.x/orange\" alt=\"Vue.js 2.x compatible\"></a>\n  <a href=\"https://raw.githubusercontent.com/probil/vue-socket.io-extended/master/dist/vue-socket.io-ext.min.js\"><img src=\"https://badgen.net/bundlephobia/min/vue-socket.io-extended\" alt=\"Minified library size\"></a>\n  <a href=\"https://codecov.io/gh/probil/vue-socket.io-extended\"><img src=\"https://badgen.net/codecov/c/github/probil/vue-socket.io-extended/master\" alt=\"Code coverage (codecov)\"></a>\n  <a href=\"https://gitter.im/vue-socket-io-extended/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link\"><img src=\"https://badgen.net/badge/chat/on%20gitter/cyan\" alt=\"Join us Gitter\"></a>\n  <a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2Fprobil%2Fvue-socket.io-extended?ref=badge_shield\" alt=\"FOSSA Status\"><img src=\"https://app.fossa.io/api/projects/git%2Bgithub.com%2Fprobil%2Fvue-socket.io-extended.svg?type=shield\"/></a>\n</p>\n\n<p align=\"center\">\n  Socket.io bindings for Vue.js and Vuex (inspired by Vue-Socket.io)\n</p>\n\n## :cherries: Features\n\n- Listen and emit `socket.io` events inside components\n- Dispatch actions and mutations in Vuex store on `socket.io` events\n- Support namespaced Vuex modules out-of-the-box\n- Listen for one server event from the multiple stores at the same time\n- Support for multiple arguments from the server (when more then one argument passed - payload is wrapped to array automatically)\n- Possibility to define `socket.io` listeners in components dynamically\n- Options support - tweak the library to better fit your project needs\n- And many other...\n\n## :heavy_check_mark: Browser Support\n\n-- |![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- | --- |\nBasic support <sup>[*](#dynamic-socket-event-listeners)</sup> | 38+ :heavy_check_mark: | 13+ :heavy_check_mark:  | 8+ :heavy_check_mark: | 25+ :heavy_check_mark: | 12+ :heavy_check_mark: | 11+ :heavy_check_mark: |\nFull support | 49+ :heavy_check_mark: | 18+ :heavy_check_mark: | 10+ :heavy_check_mark: | 36+ :heavy_check_mark: | 12+ :heavy_check_mark: | :x: |\n \n\n\n## :seedling: Motivation\n\nI was using [`Vue-Socket.io`](https://github.com/MetinSeylan/Vue-Socket.io) for few months. I've liked the idea, but the more I used it the more I faced with bugs, outdated documentation, lack of support, absence of tests and a huge amount of issues :disappointed:. That slowed down development of the product I was working on. So I ended up with a decision to create my own fork with all the desirable stuff (features/fixes/tests/support/CI checks etc). That's how `vue-socket.io-extended` was born.\n\nIf you'd like to help - create an issue or PR. I will be glad to see any contribution.  Let's make the world a better place :heart:\n\n## :grey_exclamation: Requirements\n\n- [Vue.js](https://vuejs.org/) `>=2.X`\n- [Socket.io-client](https://socket.io) `>=2.X`\n- [Vuex](https://vuex.vuejs.org/) `>=2.X` (optional, for integration with Vuex only)\n\n## :cd: Installation\n\n``` bash\nnpm install vue-socket.io-extended\n```\n\n## :checkered_flag: Initialization\n\n#### ES2015 (Webpack/Rollup/Browserify/Parcel/etc)\n``` js\nimport VueSocketio from 'vue-socket.io-extended';\nimport io from 'socket.io-client';\n\nVue.use(VueSocketio, io('http://socketserver.com:1923'));\n```\n*Note:* you have to pass instance of `socket.io-client` as second argument to prevent library duplication. Read more [here](https://github.com/probil/vue-socket.io-extended/issues/19).\n\n#### UMD (Browser)\n\n``` html\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/socket.io-client/dist/socket.io.slim.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/vue-socket.io-extended\"></script>\n<script>\n  Vue.use(VueSocketIOExt, io('http://socketserver.com:1923'));\n</script>\n```\n\n## :rocket: Usage\n\n#### On Vue.js component\n\nDefine your listeners under `sockets` section and they will listen coresponding `socket.io` events automatically.\n\n``` js\nnew Vue({\n  sockets: {\n    connect() {\n      console.log('socket connected')\n    },\n    customEmit(val) {\n      console.log('this method was fired by the socket server. eg: io.emit(\"customEmit\", data)')\n    }\n  },\n  methods: {\n    clickButton(val) {\n      // this.$socket is `socket.io-client` instance\n      this.$socket.emit('emit_method', val);\n    }\n  }\n})\n```\n\n**Note**: Don't use arrow functions for methods or listeners if you are going to emit `socket.io` events inside. You will end up with using incorrect `this`. More info about this [here](https://github.com/probil/vue-socket.io-extended/issues/61)\n\n#### Dynamic socket event listeners\nCreate a new listener\n``` js\nthis.$options.sockets.event_name = (data) => {\n  console.log(data)\n}\n```\nRemove existing listener\n``` js\ndelete this.$options.sockets.event_name;\n```\n**Note**: This feature supported only in [browsers with native Proxy API support](https://caniuse.com/#feat=proxy) (e.g. IE11 is not supported)\n\n## :evergreen_tree: Vuex Store integration\n\nTo enable Vuex integration just pass the store as the third argument, e.g.:\n``` js\nimport store from './store'\n\nVue.use(VueSocketio, io('http://socketserver.com:1923'), { store });\n```\n\nThe main idea behind the integration is that mutations and actions are dispatched/committed automatically on Vuex store when server socket event arrives. Not every mutation and action is invoked. It should follow special formatting convention, so the plugin can easily determine which one should be called. \n\n* a **mutation** should start with `SOCKET_` prefix and continue with an uppercase version of the event\n* an **action** should start with `socket_` prefix and continue with camelcase version of the event\n\n| Server Event | Mutation | Action\n| --- | --- | --- |\n| `chat message` | `SOCKET_CHAT MESSAGE` | `socket_chatMessage` |\n| `chat_message` | `SOCKET_CHAT_MESSAGE` | `socket_chatMessage` |\n| `chatMessage`  | `SOCKET_CHATMESSAGE`  | `socket_chatMessage` |\n| `CHAT_MESSAGE` | `SOCKET_CHAT_MESSAGE` | `socket_chatMessage` |\n\nCheck [Configuration](#gear-configuration) section if you'd like to use custom transformation.\n\n**Note**: different server events can commit/dispatch the same mutation or/and the same action. So try to use only one naming convention to avoid possible bugs. In any case, this behavior is going to be changed soon and considered as problematic.\n\nYou can use either mutation or action or even both in your store. Don't forget that mutations are synchronous transactions. If you have any async operations inside, it's better to use actions instead. Learn more about Vuex [here](https://vuex.vuejs.org/en/).\n\n``` js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    isConnected: false,\n    message: null,\n  },\n  mutations: {\n    SOCKET_CONNECT(state, status) {\n      state.isConnected = true;\n    },\n    SOCKET_USER_MESSAGE(state, message) {\n      state.message = message;\n    },\n  },\n  actions: {\n    otherAction(context, type) {\n      return true;\n    },\n    socket_userMessage({ commit, dispatch }, message) {\n      dispatch('newMessage', message);\n      commit('NEW_MESSAGE_RECEIVED', message);\n      if (message.is_important) {\n        dispatch('alertImportantMessage', message);\n      }\n      // ...\n    },\n  },\n})\n```\n\n#### Namespaced vuex modules\n\nNamespaced modules are supported out-of-the-box when plugin initialized with Vuex store. You can easily divide your store into modules without worrying that mutation or action will not be called. The plugin checks all your modules for mutation and action that are formatted by convention described above and call them all. That means you can listen for the same event from multiple stores with no issue.\n\nCheck the following example:\n\n```js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex);\n\nconst messages = {\n  state: {\n    messages: []\n  },\n  mutations: {\n    SOCKET_CHAT_MESSAGE(state, message) {\n      state.messages.push(message);\n    }\n  },\n  actions: {\n    socket_chatMessage() {\n      console.log('this action will be called');\n    }\n  },\n};\n\nconst notifications = {\n  state: {\n    notifications: []\n  },\n  mutations: {\n    SOCKET_CHAT_MESSAGE(state, message) {\n      state.notifications.push({ type: 'message', payload: message });\n    }\n  },\n}\n\nexport default new Vuex.Store({\n  modules: {\n    messages,\n    notifications,\n  }\n})\n```\nThat's what will happen, on `chat_message` from the server:\n* `SOCKET_CHAT_MESSAGE` mutation commited on `messages` module\n* `SOCKET_CHAT_MESSAGE` mutation commited on `notification` module\n* `socket_chatMessage` action dispated on `messages` module\n\n## :mountain_bicyclist: Usage with Nuxt.js\n> The key point here is to disable SSR for the plugin as it will crash otherwise. It's a well-know issue and we are going to fix it. Thanks [@ll931217](https://github.com/ll931217) for investigation.\n\n**1. Create plugin**:\n```js\n// ~/plugins/socket.io.js\nimport Vue from 'vue';\nimport io from 'socket.io-client';\nimport VueSocketIO from 'vue-socket.io-extended';\n\nexport default ({ store }) => {\n  Vue.use(VueSocketIO, io('http://localhost:3000'), { store });\n}\n```\n\n**2. Then register it**:\n\n```js\n// nuxt.config.js\nmodule.exports = {\n  ...,\n  plugins: [\n    ...,\n    { \n      src: '~/plugins/socket.io.js',\n      ssr: false,                    // <-- this line is required\n    },\n  ]\n}\n```\n\n## :gear: Configuration\n\nIn addition to store instance, `vue-socket.io-extended` accepts other options. \nHere they are:\n\n| Option | Type | Default | Description |\n| ---- | ---- | ------- | ------- |\n| `store` | `Object` | `undefined` | Vuex store instance, enables vuex integration |\n| `actionPrefix` | `String` | `'socket_'` | Append to event name while converting event to action. Empty string disables prefixing |\n| `mutationPrefix` | `String` | `'SOCKET_'` | Append to event name while converting event to mutation. Empty string disables prefixing |  \n| `eventToMutationTransformer` | `Function` `string => string` | uppercase function | Determines how event name converted to mutation |\n| `eventToActionTransformer` | `Function` `string => string` | camelcase function | Determines how event name converted to action |\n\n*FYI:* You can always access default plugin options if you need it (e.g. re-use default `eventToActionTransformer` function):\n\n```js\nimport VueSocketIOExt from 'vue-socket.io-extended';\nVueSocketIOExt.defaults // -> { actionPrefix: '...', mutationPrefix: '...', ... }\n```\n## :question: FAQ\n\n- [How to prevent connection until authed?](https://github.com/probil/vue-socket.io-extended/issues/114#issuecomment-405411500)\n\n- [How to receive/emit event from server to the particular user?](https://github.com/probil/vue-socket.io-extended/issues/71#issuecomment-390820203) (check also [this](https://gitter.im/vue-socket-io-extended/Lobby?at=5bbc9973ef4afc4f2842d0bc))\n\n- [How access this.$socket from Vuex actions?](https://github.com/probil/vue-socket.io-extended/issues/91#issuecomment-397232621)\n\n- [My mutation is triggered two times?](https://github.com/probil/vue-socket.io-extended/issues/185)\n\n## :anchor: Semantic Versioning Policy\n\nThis plugin follows [semantic versioning](http://semver.org/).\n\n## :newspaper: Changelog\n\nWe're using [GitHub Releases](https://github.com/probil/vue-socket.io-extended/releases).\n\n## :beers: Contribution\n\nWe're more than happy to see potential contributions, so don't hesitate. If you have any suggestions, ideas or problems feel free to add new [issue](https://github.com/probil/vue-socket.io-extended/issues/new), but first please make sure your question does not repeat previous ones.\n\n## :lock: License\n\nSee the [LICENSE](LICENSE) file for license rights and limitations (MIT).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fprobil%2Fvue-socket.io-extended.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fprobil%2Fvue-socket.io-extended?ref=badge_large)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/probil/vue-socket.io-extended.git"
  },
  "scripts": {
    "build": "rollup -c scripts/rollup-build.js",
    "lint": "eslint scripts src",
    "release": "bash scripts/release.sh",
    "release:note": "node scripts/gen-release-note.js",
    "test": "jest"
  },
  "types": "types/index.d.ts",
  "version": "3.2.1"
}
